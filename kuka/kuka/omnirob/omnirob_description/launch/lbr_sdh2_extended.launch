<launch>
  
	<!-- Get package path-->
	<param name="package_path" value="$(find kuka_motion_control)" />
	<param name="planner_package_path" value="$(find planner_statistics)" />
	<param name="terminal_configs_path" value="$(find planning_scenarios)" />
  
	<param name="robot_description" textfile="$(find omnirob_description)/urdf/lbr_sdh2.urdf" />
	<param name="robot_description_semantic" textfile="$(find omnirob_description)/srdf/lbr_sdh2.srdf" />
	
	<param name="use_gui" value="True"/>
	
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
	
	
	
	<!-- GDB Debug Option -->
    <arg name="debug" default="false" />
    <arg unless="$(arg debug)" name="launch_prefix" value="" />
    <arg     if="$(arg debug)" name="launch_prefix"
	   value="gdb -x $(find lbr_moveit_config)/launch/gdb_settings.gdb --ex run --args" />
	   
	<!-- Verbose Mode Option -->
   <arg name="info" default="$(arg debug)" />
   <arg unless="$(arg info)" name="command_args" value="" />
   <arg     if="$(arg info)" name="command_args" value="--debug" />
   
   
   <!-- move_group settings -->
   <arg name="allow_trajectory_execution" default="true"/>
   <arg name="fake_execution" default="false"/>
   <arg name="max_safe_path_cost" default="1"/>
   <arg name="jiggle_fraction" default="0.05" />
   <arg name="publish_monitored_planning_scene" default="true"/>
  
	
	<!-- Start the actual move_group node/action server -->
    <node name="move_group" launch-prefix="$(arg launch_prefix)" pkg="moveit_ros_move_group" type="move_group" respawn="false" output="screen" args="$(arg command_args)">
		<!-- Set the display variable, in case OpenGL code is used internally -->
		<env name="DISPLAY" value="$(optenv DISPLAY :0)" />

		<param name="allow_trajectory_execution" value="$(arg allow_trajectory_execution)"/>
		<param name="max_safe_path_cost" value="$(arg max_safe_path_cost)"/>
		<param name="jiggle_fraction" value="$(arg jiggle_fraction)" />

		<!-- MoveGroup capabilities to load -->
		<param name="capabilities" value="move_group/MoveGroupCartesianPathService
						  move_group/MoveGroupExecuteService
						  move_group/MoveGroupKinematicsService
						  move_group/MoveGroupMoveAction
						  move_group/MoveGroupPickPlaceAction
						  move_group/MoveGroupPlanService
						  move_group/MoveGroupQueryPlannersService
						  move_group/MoveGroupStateValidationService
						  move_group/MoveGroupGetPlanningSceneService
						  move_group/ClearOctomapService
						  " />

		<!-- Publish the planning scene of the physical robot so that rviz plugin can know actual robot -->
		<param name="planning_scene_monitor/publish_planning_scene" value="$(arg publish_monitored_planning_scene)" />
		<param name="planning_scene_monitor/publish_geometry_updates" value="$(arg publish_monitored_planning_scene)" />
		<param name="planning_scene_monitor/publish_state_updates" value="$(arg publish_monitored_planning_scene)" />
		<param name="planning_scene_monitor/publish_transforms_updates" value="$(arg publish_monitored_planning_scene)" />
    </node>
	
	
	
	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find kuka_motion_control)/motion_control_display.rviz"/>
	
</launch>
