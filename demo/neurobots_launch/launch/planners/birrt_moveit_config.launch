<launch>

	<!-- <param name="planner_package_path" value="$(find planner_statistics)" /> <rosparam command="load" file="$(find planner_param_config)/planner_config/planner_parameters_omnirob_neurobots_demo.yaml" /> <rosparam command="load" file="$(find execution_param_config)/execution_config/execution_config_real_omnirob.yaml" /> <node name="base_planning_service" pkg="planning_server" type="base_planning_service" output="screen"/> -->

	<group ns="omnirob_lbr">

		<arg name="robot" default="omnirob" />

		<param name="tf_prefix" value="omnirob_lbr" />

		<!-- GDB Debug Option -->
		<arg name="debug" default="false" />
		<arg unless="$(arg debug)" name="launch_prefix" value="" />
		-->
		<arg if="$(arg debug)" name="launch_prefix" value="gdb -x $(find moveit_config_omnirob_lbr_sdh)/launch/gdb_settings.gdb --ex run --args" />

		<!-- Verbose Mode Option -->
		<arg name="info" default="$(arg debug)" />
		<arg unless="$(arg info)" name="command_args" value="" />
		<arg if="$(arg info)" name="command_args" value="--debug" />

		<!-- move_group settings -->
		<arg name="publish_monitored_planning_scene" default="true" />

		<!-- Start the actual move_group node/action server -->
		<node name="$(arg robot)_move_group" launch-prefix="$(arg launch_prefix)" pkg="moveit_ros_move_group" type="move_group" respawn="false" output="screen" args="$(arg command_args)">
			<!-- Set the display variable, in case OpenGL code is used internally -->
			<env name="DISPLAY" value="$(optenv DISPLAY :0)" />

			<!-- MoveGroup capabilities to load -->
			<param name="capabilities" value="move_group/MoveGroupCartesianPathService
						  move_group/MoveGroupExecuteService
						  move_group/MoveGroupKinematicsService
						  move_group/MoveGroupMoveAction
						  move_group/MoveGroupPickPlaceAction
						  move_group/MoveGroupPlanService
						  move_group/MoveGroupQueryPlannersService
						  move_group/MoveGroupStateValidationService
						  move_group/MoveGroupGetPlanningSceneService
						  move_group/ClearOctomapService
						  " />

			<!-- Publish the planning scene of the physical robot so that rviz plugin can know actual robot -->
			<param name="planning_scene_monitor/publish_planning_scene" value="$(arg publish_monitored_planning_scene)" />
			<param name="planning_scene_monitor/publish_geometry_updates" value="$(arg publish_monitored_planning_scene)" />
			<param name="planning_scene_monitor/publish_state_updates" value="$(arg publish_monitored_planning_scene)" />
			<param name="planning_scene_monitor/publish_transforms_updates" value="$(arg publish_monitored_planning_scene)" />
		</node>

	</group>

</launch>
